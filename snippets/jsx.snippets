
snippet rcc 
	import React, { Component } from 'react'

	export default class FileName extends Component {
		render() {
			return <div>$2</div>
		}
	}

snippet rce
	import React, { Component } from 'react'

	export class FileName extends Component {
		render() {
			return <div>$2</div>
		}
	}

	export default $1

snippet rcep
	import React, { Component } from 'react'
	import PropTypes from 'prop-types'

	export class FileName extends Component {
		static propTypes = {}

		render() {
			return <div>$2</div>
		}
	}

	export default $1

snippet rpc
	import React, { PureComponent } from 'react'

	export default class FileName extends PureComponent {
		render() {
			return <div>$2</div>
		}
	}

snippet rpcp
	import React, { PureComponent } from 'react'
	import PropTypes from 'prop-types'

	export default class FileName extends PureComponent {
		static propTypes = {}

		render() {
			return <div>$2</div>
		}
	}

snippet rpce
	import React, { PureComponent } from 'react'
	import PropTypes from 'prop-types'

	export class FileName extends PureComponent {
		static propTypes = {}

		render() {
			return <div>$2</div>
		}
	}

	export default FileName

snippet rccp
	import React, { Component } from 'react'
	import PropTypes from 'prop-types'

	export default class FileName extends Component {
		static propTypes = {
			$2: $3,
		}

		render() {
			return <div>$4</div>
		}
	}

snippet rfcp
	import React from 'react'
	import PropTypes from 'prop-types'

	function $1(props) {
		return <div>$0</div>
	}

	$1.propTypes = {}

	export default $1

snippet rfc
	import React from 'react'

	export default function $1() {
		return <div>$0</div>
	}

snippet rfce
	import React from 'react'

	function $1() {
		return <div>$0</div>
	}

	export default $1

snippet rafcp
	import React from 'react'
	import PropTypes from 'prop-types'

	const $1 = (props) => {
		return <div>$0</div>
	}

	$1.propTypes = {}

	export default $1

snippet rafc
	import React from 'react'

	export const $1 = () => {
		return <div>$0</div>
	}

snippet rafce
	import React from 'react'

	const $1 = () => {
		return <div>$0</div>
	}

	export default $1

snippet rmc
	import React, { memo } from 'react'

	export default memo(function $1() {
		return <div>$0</div>
	})

snippet rmcp
	import React, { memo } from 'react'
	import PropTypes from 'prop-types'
	const $1 = memo(function $1(props) {
		return <div>$0</div>
	})

	$1.propTypes = {}

	export default $1

snippet rcredux
	import React, { Component } from 'react'
	import { connect } from 'react-redux'

	export class FileName extends Component {
		render() {
			return <div>$4</div>
		}
	}

	const mapStateToProps = (state) => ({})

	const mapDispatchToProps = {}

	export default connect(mapStateToProps, mapDispatchToProps)(FileName)

snippet rcreduxp
	import React, { Component } from 'react'
	import PropTypes from 'prop-types'
	import { connect } from 'react-redux'

	export class FileName extends Component {
		static propTypes = {
			$2: $3,
		}

		render() {
			return <div>$4</div>
		}
	}

	const mapStateToProps = (state) => ({})

	const mapDispatchToProps = {}

	export default connect(mapStateToProps, mapDispatchToProps)(FileName)

snippet rfcredux
	import React, { Component } from 'react'
	import { connect } from 'react-redux'

	export const FileName = () => {
		return <div>$4</div>
	}

	const mapStateToProps = (state) => ({})

	const mapDispatchToProps = {}

	export default connect(mapStateToProps, mapDispatchToProps)(FileName)

snippet rfreduxp
	import React, { Component } from 'react'
	import PropTypes from 'prop-types'
	import { connect } from 'react-redux'

	export const FileName = () => {
		return <div>$4</div>
	}

	FileName.propTypes = {
		$2: $3,
	}

	const mapStateToProps = (state) => ({})

	const mapDispatchToProps = {}

	export default connect(mapStateToProps, mapDispatchToProps)(FileName)

snippet reduxmap
	const mapStateToProps = (state) => ({})

	const mapDispatchToProps = {}
	React Native Components
	rnc
	import React, { Component } from 'react'
	import { Text, View } from 'react-native'

	export default class FileName extends Component {
		render() {
			return (
				<View>
					<Text> $2 </Text>
				</View>
			)
		}
	}

snippet rnf
	import React from 'react'
	import { View, Text } from 'react-native'

	export default function $1() {
		return (
			<View>
				<Text> $2 </Text>
			</View>
		)
	}

snippet rnfs
	import React from 'react'
	import { StyleSheet, View, Text } from 'react-native'

	export default function $1() {
		return (
			<View>
				<Text> $2 </Text>
			</View>
		)
	}

	const styles = StyleSheet.create({})

snippet rnfe
	import React from 'react'
	import { View, Text } from 'react-native'

	const $1 = () => {
		return (
			<View>
				<Text> $2 </Text>
			</View>
		)
	}

	export default $1

snippet rnfes
	import React from 'react'
	import { StyleSheet, View, Text } from 'react-native'

	const $1 = () => {
		return (
			<View>
				<Text> $2 </Text>
			</View>
		)
	}

	export default $1

	const styles = StyleSheet.create({})

snippet rncs
	import React, { Component } from 'react'
	import { Text, StyleSheet, View } from 'react-native'

	export default class FileName extends Component {
		render() {
			return (
				<View>
					<Text> $2 </Text>
				</View>
			)
		}
	}

	const styles = StyleSheet.create({})

snippet rnce
	import React, { Component } from 'react'
	import { Text, View } from 'react-native'

	export class FileName extends Component {
		render() {
			return (
				<View>
					<Text> $2 </Text>
				</View>
			)
		}
	}

	export default $1
